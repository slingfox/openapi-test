name: Merge on pull request comment
on:
#  pull_request:
#    types: [opened]
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      # Get the PR, see https://github.com/actions/checkout/issues/331#issuecomment-707103442
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name
      - uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');

            // Constants
            const PERMITTED_ACTOR = 'slingfox';
            const COMMAND_PATCH = '!patch';
            const COMMAND_MINOR = '!minor';
            const COMMAND_MAJOR = '!major';
            const FILE_PATH = 'openapi.json';

            // Check that the user is permitted to execute via comment
            if (context.actor !== PERMITTED_ACTOR) {
              console.warn('Not a comment by a permitted author');
              return;
            }

            // Parse the comment to find a bump command
            let bumpAt = 2; // which part of the version triplet to bump
            if (context.payload.comment.body.includes(COMMAND_PATCH)) {
              bumpAt = 2;
            } else if (context.payload.comment.body.includes(COMMAND_MINOR)) {
              bumpAt = 1;
            } else if (context.payload.comment.body.includes(COMMAND_MAJOR)) {
              bumpAt = 0;
            } else {
              console.warn('No command found in: ' + context.payload.comment.body);
              return;
            }

            console.log('Bump: ' + bumpAt);

            const data = fs.readFileSync(FILE_PATH);
            const json = JSON.parse(data);

            const oldVersionStr = json.info.version;

            const oldVersion = oldVersionStr.match(/\d+/g);
            console.log(oldVersion);


            // https://github.com/weflex/semver-increment/blob/master/index.js
            let newVersion = []
            for (let i = 0; i < oldVersion.length; ++i) {
                if (i < bumpAt) {
                  newVersion[i] = +oldVersion[i];
                } else if (i === bumpAt) {
                  newVersion[i] = +oldVersion[i] + 1;
                } else {
                  newVersion[i] = 0;
                }
              }

            const newVersionStr = newVersion.join('.');
            console.log(newVersionStr);

            json.info.version = newVersionStr;
            fs.writeFileSync(FILE_PATH, JSON.stringify(json, null, 2));


      # - uses: khan/pull-request-comment-trigger@master
      #   id: checkPatch
      #   with:
      #     trigger: '!patch'
      #     reaction: '+1'
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      # - uses: khan/pull-request-comment-trigger@master
      #   id: checkMinor
      #   with:
      #     trigger: '!minor'
      #     reaction: 'hooray'
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      # - uses: khan/pull-request-comment-trigger@master
      #   id: checkMajor
      #   with:
      #     trigger: '!major'
      #     reaction: 'rocket'
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      # - run: 'echo Found it!'
      #   if: steps.checkMajor.outputs.triggered == 'true'
      # - name: Merge pull request
      #   uses: "pascalgn/automerge-action@v0.13.1"
      #   if: steps.checkOatch.outputs.triggered == 'true' || steps.checkMinor.outputs.triggered == 'true' || steps.checkMajor.outputs.triggered == 'true'
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      #     MERGE_LABELS: ""
      #     MERGE_METHOD: rebase